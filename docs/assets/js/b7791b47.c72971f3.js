"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[809],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,h=c["".concat(o,".").concat(m)]||c[m]||d[m]||l;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2360:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),r=n(6010);const l="tabItem_OmH5";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:n},t)}},9877:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),r=n(7294),l=n(2389),i=n(7392),s=n(7094),o=n(2466),p=n(6010);const u="tabList_uSqn",d="tabItem_LplD";function c(e){var t,n,l;const{lazy:c,block:m,defaultValue:h,values:f,groupId:k,className:b}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=f?f:g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),N=(0,i.l)(v,((e,t)=>e.value===t.value));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===h?h:null!=(t=null!=h?h:null==(n=g.find((e=>e.props.default)))?void 0:n.props.value)?t:null==(l=g[0])?void 0:l.props.value;if(null!==y&&!v.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:O}=(0,s.U)(),[S,T]=(0,r.useState)(y),C=[],{blockElementScrollPositionUntilNextRender:x}=(0,o.o5)();if(null!=k){const e=w[k];null!=e&&e!==S&&v.some((t=>t.value===e))&&T(e)}const E=e=>{const t=e.currentTarget,n=C.indexOf(t),a=v[n].value;a!==S&&(x(t),T(a),null!=k&&O(k,a))},j=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=C.indexOf(e.currentTarget)+1;n=C[t]||C[0];break}case"ArrowLeft":{const t=C.indexOf(e.currentTarget)-1;n=C[t]||C[C.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,p.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":m},b)},v.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:S===t?0:-1,"aria-selected":S===t,key:t,ref:e=>C.push(e),onKeyDown:j,onFocus:E,onClick:E},l,{className:(0,p.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":S===t})}),null!=n?n:t)}))),c?(0,r.cloneElement)(g.filter((e=>e.props.value===S))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==S})))))}function m(e){const t=(0,l.Z)();return r.createElement(c,(0,a.Z)({key:String(t)},e))}},3961:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var a=n(7462),r=(n(7294),n(3905)),l=n(9877),i=n(2360);const s={sidebar_position:5},o="Contributing",p={unversionedId:"miscellany/contributing",id:"miscellany/contributing",title:"Contributing",description:"Due to the precarious nature of the Open Specifications Promise, it is very",source:"@site/docs/09-miscellany/05-contributing.md",sourceDirName:"09-miscellany",slug:"/miscellany/contributing",permalink:"/docs/miscellany/contributing",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Testing",permalink:"/docs/miscellany/testing"},next:{title:"License",permalink:"/docs/miscellany/license"}},u={},d=[{value:"OS-Specific Setup",id:"os-specific-setup",level:2},{value:"Development",id:"development",level:2},{value:"Tests",id:"tests",level:2}],c={toc:d};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"contributing"},"Contributing"),(0,r.kt)("p",null,"Due to the precarious nature of the Open Specifications Promise, it is very\nimportant to ensure code is cleanroom.  ",(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/SheetJS/sheetjs/master/CONTRIBUTING.md"},"Contribution Notes")),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"File organization")," (click to show)"),(0,r.kt)("p",null,"At a high level, the final script is a concatenation of the individual files in\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"bits")," folder.  Running ",(0,r.kt)("inlineCode",{parentName:"p"},"make")," should reproduce the final output on all\nplatforms."),(0,r.kt)("p",null,"Folders:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"folder"),(0,r.kt)("th",{parentName:"tr",align:"left"},"contents"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bits")),(0,r.kt)("td",{parentName:"tr",align:"left"},"raw source files that make up the final script")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bin")),(0,r.kt)("td",{parentName:"tr",align:"left"},"server-side bin scripts (",(0,r.kt)("inlineCode",{parentName:"td"},"xlsx.njs"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dist")),(0,r.kt)("td",{parentName:"tr",align:"left"},"dist files for web browsers and nonstandard JS environments")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"demos")),(0,r.kt)("td",{parentName:"tr",align:"left"},"demo projects for platforms like ExtendScript and Webpack")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"tests")),(0,r.kt)("td",{parentName:"tr",align:"left"},"browser tests (run ",(0,r.kt)("inlineCode",{parentName:"td"},"make ctest")," to rebuild)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"types")),(0,r.kt)("td",{parentName:"tr",align:"left"},"typescript definitions and tests")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"misc")),(0,r.kt)("td",{parentName:"tr",align:"left"},"miscellaneous supporting scripts")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"test_files")),(0,r.kt)("td",{parentName:"tr",align:"left"},"test files (pulled from the test files repository)"))))),(0,r.kt)("p",null,"After cloning the repo, running ",(0,r.kt)("inlineCode",{parentName:"p"},"make help")," will display a list of commands."),(0,r.kt)("h2",{id:"os-specific-setup"},"OS-Specific Setup"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"wsl",label:"Windows WSL",mdxType:"TabItem"},(0,r.kt)("p",null,"The OSX/Linux workflow works in WSL.  Initial setup is involved:"),(0,r.kt)("p",null,"1) Install mercurial and subversion."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Install support programs for the build and test commands\nsudo add-apt-repository ppa:mercurial-ppa/releases\nsudo apt-get update\nsudo apt-get install mercurial subversion\nsudo add-apt-repository --remove ppa:mercurial-ppa/releases\n")),(0,r.kt)("p",null,"2) Install NodeJS"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Install bootstrap NodeJS and NPM within the WSL\ncurl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -\nsudo apt-get install -y nodejs\n\n# CLOSE AND REOPEN SHELL BEFORE CONTINUING\n\n# Switch to `n`-managed NodeJS\nsudo npm i -g n\nsudo n 16\n")),(0,r.kt)("p",null,"3) follow ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paul-nelson-baker/git-openssl-shellscript"},"https://github.com/paul-nelson-baker/git-openssl-shellscript")," to\nbuild and install a version of Git with OpenSSL:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Git does not support OpenSSL out of the box, must do this\ncurl -LO https://github.com/paul-nelson-baker/git-openssl-shellscript/raw/main/compile-git-with-openssl.sh\nchmod +x compile-git-with-openssl.sh\n./compile-git-with-openssl.sh\n")),(0,r.kt)("p",null,"(instructions continued in the OSX/Linux part)")),(0,r.kt)(i.Z,{value:"osx",label:"OSX/Linux",mdxType:"TabItem"},(0,r.kt)("p",null,"Initial setup:"),(0,r.kt)("p",null,"0) Ensure mercurial, subversion, and NodeJS are installed. The WSL instructions\nwill have installed these dependencies, so WSL users can skip to step 1."),(0,r.kt)("p",null,"On Linux:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install mercurial subversion\n")),(0,r.kt)("p",null,"On MacOS, install using ",(0,r.kt)("a",{parentName:"p",href:"https://brew.sh/"},(0,r.kt)("inlineCode",{parentName:"a"},"brew")),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"brew install mercurial subversion\n")),(0,r.kt)("p",null,"NodeJS installers can be found at ",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"https://nodejs.org/en/download/")),(0,r.kt)("p",null,"1) Install NodeJS modules for building the scripts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Install dev dependencies\nnpm install\n\n# Install global dependencies\nsudo npm install -g mocha@2.5.3 voc @sheetjs/uglify-js\n")),(0,r.kt)("p",null,"2) Initialize the test files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"make init\n")),(0,r.kt)("p",null,"This step may take a while as it will be downloading a number of test files."),(0,r.kt)("p",null,"3) Run a short test, then run a build"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Short test\nmake test_misc\n\n# Full Build\ncd modules; make; cd ..\nmake dist\n")),(0,r.kt)("p",null,"4) (For Deno testing) Install Deno:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -fsSL https://deno.land/install.sh | sh\n")))),(0,r.kt)("h2",{id:"development"},"Development"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"xlsx.js")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"xlsx.mjs")," files are constructed from the files in the ",(0,r.kt)("inlineCode",{parentName:"p"},"bits"),"\nsubdirectory. The build script (run ",(0,r.kt)("inlineCode",{parentName:"p"},"make"),") will concatenate the individual\nbits to produce the scripts."),(0,r.kt)("p",null,"To produce the dist files, run ",(0,r.kt)("inlineCode",{parentName:"p"},"make dist"),".  The dist files are updated in each\nversion release and ",(0,r.kt)("em",{parentName:"p"},"should not be committed between versions"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"A note on Older Versions")),(0,r.kt)("p",null,"Some of the dependencies are wildly out of date.  While SheetJS aims to run in\nolder versions of NodeJS and browsers, some libraries have chosen to break\nbackwards compatibility.  The specific versions are used because they are known\nto work and known to produce consistent results."),(0,r.kt)("h2",{id:"tests"},"Tests"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"test_misc")," target runs the targeted feature tests.  It should take 5-10\nseconds to perform feature tests without testing against the full test battery.\nNew features should be accompanied with tests for the relevant file formats."),(0,r.kt)("p",null,"For tests involving the read side, an appropriate feature test would involve\nreading an existing file and checking the resulting workbook object.  If a\nparameter is involved, files should be read with different values to verify that\nthe feature is working as expected."),(0,r.kt)("p",null,"For tests involving a new write feature which can already be parsed, appropriate\nfeature tests would involve writing a workbook with the feature and then opening\nand verifying that the feature is preserved."),(0,r.kt)("p",null,"For tests involving a new write feature without an existing read ability, please\nadd a feature test to the kitchen sink ",(0,r.kt)("inlineCode",{parentName:"p"},"tests/write.js"),"."))}m.isMDXComponent=!0}}]);