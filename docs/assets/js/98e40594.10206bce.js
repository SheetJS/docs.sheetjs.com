"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3199],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,h=u["".concat(i,".").concat(d)]||u[d]||p[d]||o;return n?r.createElement(h,l(l({ref:t},m),{},{components:n})):r.createElement(h,l({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2009:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:4},l="Cell Comments",s={unversionedId:"csf/features/comments",id:"csf/features/comments",title:"Cell Comments",description:"Format Support (click to show)",source:"@site/docs/07-csf/07-features/04-comments.md",sourceDirName:"07-csf/07-features",slug:"/csf/features/comments",permalink:"/docs/csf/features/comments",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Dates and Times",permalink:"/docs/csf/features/dates"},next:{title:"API Reference",permalink:"/docs/api/"}},i={},c=[{value:"Basic Structure",id:"basic-structure",level:2},{value:"Visibility",id:"visibility",level:2},{value:"Threaded Comments",id:"threaded-comments",level:2}],m={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cell-comments"},"Cell Comments"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("b",null,"Format Support")," (click to show)"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Simple Notes/Comments"),": XLSX/M, XLSB, BIFF8 XLS (read only), XLML, ODS (read only)"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Threaded Comments"),": XLSX/M, XLSB (read only)")),(0,a.kt)("h2",{id:"basic-structure"},"Basic Structure"),(0,a.kt)("p",null,"Cell comments are objects stored in the ",(0,a.kt)("inlineCode",{parentName:"p"},"c")," array of cell objects."),(0,a.kt)("p",null,"The comment content is split into parts based on the comment author."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"a")," field of each comment part is the author of the comment and the ",(0,a.kt)("inlineCode",{parentName:"p"},"t"),"\nfield is the plain text representation."),(0,a.kt)("p",null,"For example, the following snippet appends a cell comment into cell ",(0,a.kt)("inlineCode",{parentName:"p"},"A1"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'var cell = ws["A1"];\n\n/* create comment array if it does not exist */\nif(!cell.c) ws.A1.c = [];\n\n/* create a comment part */\nvar comment_part = {\n  a:"SheetJS",\n  t:"I\'m a little comment, short and stout!"\n};\n\n/* Add comment part to the comment array */\ncell.c.push(comment_part);\n')),(0,a.kt)("admonition",{title:"XLSB Author limits",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"XLSB enforces a 54 character limit on the Author name.  Names longer than 54\ncharacters may cause issues with other formats.")),(0,a.kt)("details",{open:!0},(0,a.kt)("summary",null,(0,a.kt)("b",null,"Live Example")," (click to hide)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function SheetJSComments1() {\n  return (<button onClick={() => {\n    var ws = XLSX.utils.aoa_to_sheet([["SheetJS"]]);\n\n    if(!ws.A1.c) ws.A1.c = [];\n    ws.A1.c.push({a:"SheetJS", t:"I\'m a little comment, short and stout!"});\n\n    var wb = XLSX.utils.book_new(); XLSX.utils.book_append_sheet(wb, ws, "Sheet1");\n    XLSX.writeFile(wb, "SheetJSComments1.xlsx");\n  }}>Click me to generate a sample file</button>);\n}\n'))),(0,a.kt)("h2",{id:"visibility"},"Visibility"),(0,a.kt)("p",null,"To mark a comment as normally hidden, set the ",(0,a.kt)("inlineCode",{parentName:"p"},"hidden")," property:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'if(!cell.c) cell.c = [];\n// highlight-next-line\ncell.c.hidden = true;\ncell.c.push({a:"SheetJS", t:"This comment will be hidden"});\n')),(0,a.kt)("details",{open:!0},(0,a.kt)("summary",null,(0,a.kt)("b",null,"Live Example")," (click to hide)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function SheetJSComments2() {\n  return (<button onClick={() => {\n    var ws = XLSX.utils.aoa_to_sheet([["SheetJS"], [5433795]]);\n\n    if(!ws.A1.c) ws.A1.c = [];\n    ws.A1.c.push({a:"SheetJS", t:"This comment is visible"});\n\n    if(!ws.A2.c) ws.A2.c = [];\n    ws.A2.c.hidden = true;\n    ws.A2.c.push({a:"SheetJS", t:"This comment will be hidden"});\n\n    var wb = XLSX.utils.book_new(); XLSX.utils.book_append_sheet(wb, ws, "Sheet1");\n    XLSX.writeFile(wb, "SheetJSComments2.xlsx");\n  }}>Click me to generate a sample file</button>);\n}\n\n'))),(0,a.kt)("h2",{id:"threaded-comments"},"Threaded Comments"),(0,a.kt)("p",null,"Introduced in Excel 365, threaded comments are plain text comment snippets with\nauthor metadata and parent references. They are supported in XLSX and XLSB."),(0,a.kt)("p",null,"To mark a comment as threaded, each comment part must have a true ",(0,a.kt)("inlineCode",{parentName:"p"},"T")," property:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'if(!cell.c) cell.c = [];\n\nvar part1 = {\n  a:"SheetJS",\n  t:"This is threaded",\n// highlight-next-line\n  T: true\n};\ncell.c.push(part1);\n\nvar part2 = {\n  a:"JSSheet",\n  t:"This is also threaded",\n};\n// The next line uses Object Spread syntax to add T: true\n// highlight-next-line\ncell.c.push({ ...part2, T: true});\n')),(0,a.kt)("p",null,"There is no Active Directory or Office 365 metadata associated with authors."),(0,a.kt)("details",{open:!0},(0,a.kt)("summary",null,(0,a.kt)("b",null,"Live Example")," (click to hide)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function SheetJSComments2() {\n  return (<button onClick={() => {\n    var ws = XLSX.utils.aoa_to_sheet([["SheetJS"], [5433795]]);\n\n    /* normal comment */\n    if(!ws.A1.c) ws.A1.c = [];\n    ws.A1.c.push({a:"SheetJS", t:"This is not threaded"});\n\n    /* hidden threaded comment */\n    if(!ws.A2.c) ws.A2.c = [];\n    ws.A2.c.hidden = true;\n\n    /* add parts */\n    ws.A2.c.push({a:"SheetJS", t:"This is threaded", T: true});\n\n    var part = {a:"JSSheet", t:"This is also threaded"};\n    ws.A2.c.push({...part, T: true});\n\n    /* create workbook and export */\n    var wb = XLSX.utils.book_new(); XLSX.utils.book_append_sheet(wb, ws, "Sheet1");\n    XLSX.writeFile(wb, "SheetJSThreadedComments.xlsx");\n  }}>Click me to generate a sample file</button>);\n}\n\n'))))}p.isMDXComponent=!0}}]);