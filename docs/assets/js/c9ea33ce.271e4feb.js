"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2700],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(n),c=l,h=u["".concat(i,".").concat(c)]||u[c]||d[c]||r;return n?a.createElement(h,s(s({ref:t},m),{},{components:n})):a.createElement(h,s({ref:t},m))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,s=new Array(r);s[0]=u;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:l,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),l=n(4334);const r="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,s),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(7462),l=n(7294),r=n(4334),s=n(2389),o=n(7392),i=n(7094),p=n(2466);const m="tabList__CuJ",d="tabItem_LNqP";function u(e){var t,n;const{lazy:s,block:u,defaultValue:c,values:h,groupId:k,className:b}=e,x=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),w=null!=h?h:x.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),g=(0,o.l)(w,((e,t)=>e.value===t.value));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const f=null===c?c:null!=(t=null!=c?c:null==(n=x.find((e=>e.props.default)))?void 0:n.props.value)?t:x[0].props.value;if(null!==f&&!w.some((e=>e.value===f)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+f+'" but none of its children has the corresponding value. Available values are: '+w.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:y,setTabGroupChoices:N}=(0,i.U)(),[v,j]=(0,l.useState)(f),T=[],{blockElementScrollPositionUntilNextRender:S}=(0,p.o5)();if(null!=k){const e=y[k];null!=e&&e!==v&&w.some((t=>t.value===e))&&j(e)}const _=e=>{const t=e.currentTarget,n=T.indexOf(t),a=w[n].value;a!==v&&(S(t),j(a),null!=k&&N(k,String(a)))},Z=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=T.indexOf(e.currentTarget)+1;n=null!=(a=T[t])?a:T[0];break}case"ArrowLeft":{var l;const t=T.indexOf(e.currentTarget)-1;n=null!=(l=T[t])?l:T[T.length-1];break}}null==(t=n)||t.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",m)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":u},b)},w.map((e=>{let{value:t,label:n,attributes:s}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>T.push(e),onKeyDown:Z,onFocus:_,onClick:_},s,{className:(0,r.Z)("tabs__item",d,null==s?void 0:s.className,{"tabs__item--active":v===t})}),null!=n?n:t)}))),s?(0,l.cloneElement)(x.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},x.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function c(e){const t=(0,s.Z)();return l.createElement(u,(0,a.Z)({key:String(t)},e))}},9628:(e,t,n)=>{n.d(t,{Z:()=>a});const a="0.18.10"},589:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>h,frontMatter:()=>i,metadata:()=>m,toc:()=>u});var a=n(7462),l=(n(7294),n(3905)),r=n(9628),s=n(5488),o=n(5162);const i={sidebar_position:9,title:"Bundlers"},p=void 0,m={unversionedId:"getting-started/demos/bundler",id:"getting-started/demos/bundler",title:"Bundlers",description:"SheetJS predates ECMAScript modules and bundler tools like Webpack. As best",source:"@site/docs/04-getting-started/03-demos/09-bundler.md",sourceDirName:"04-getting-started/03-demos",slug:"/getting-started/demos/bundler",permalink:"/docs/getting-started/demos/bundler",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"Bundlers"},sidebar:"tutorialSidebar",previous:{title:"Typed Arrays and ML",permalink:"/docs/getting-started/demos/ml"},next:{title:"Excel JavaScript API",permalink:"/docs/getting-started/demos/excel"}},d={},u=[{value:"Browserify",id:"browserify",level:2},{value:"Bun",id:"bun",level:2},{value:"ESBuild",id:"esbuild",level:2},{value:"Parcel",id:"parcel",level:2},{value:"RequireJS",id:"requirejs",level:2},{value:"Rollup",id:"rollup",level:2},{value:"Snowpack",id:"snowpack",level:2},{value:"SWC",id:"swc",level:2},{value:"Vite",id:"vite",level:2},{value:"WMR",id:"wmr",level:2}],c={toc:u};function h(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"SheetJS predates ECMAScript modules and bundler tools like Webpack. As best\npractices have evolved, stress testing SheetJS libraries have revealed bugs in\nthe respective bundlers.  This demo collects various notes and provides basic\nexamples."),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Issues should be reported to the respective bundler projects.  Typically it is\nconsidered a bundler bug if the tool cannot properly handle JS libraries.")),(0,l.kt)("h2",{id:"browserify"},"Browserify"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"browserify"),' is compatible with the library and should "just work" with the\n',(0,l.kt)("inlineCode",{parentName:"p"},"require")," form in a main page or in a web worker:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'var XLSX = require("xlsx");\n// ... use XLSX ...\n')),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../../installation/nodejs"},"After installing the module"),", bundling is easy:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"browserify app.js > browserify.js\nuglifyjs browserify.js > browserify.min.js\n")),(0,l.kt)("p",null,"Web Worker scripts can be bundled using the same approach."),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Complete Example")," (click to show)"),(0,l.kt)("p",null,"1) Install the tarball using a package manager:"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i --save https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ pnpm install https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"yarn",label:"Yarn",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz")))),(0,l.kt)("p",null,"2) Download the following files:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"pathname:///browserify/app.js"},(0,l.kt)("inlineCode",{parentName:"a"},"app.js"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"pathname:///browserify/index.html"},(0,l.kt)("inlineCode",{parentName:"a"},"index.html"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"pathname:///browserify/xlsxworker.js"},(0,l.kt)("inlineCode",{parentName:"a"},"xlsxworker.js")))),(0,l.kt)("p",null,"3) Bundle the scripts:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx browserify app.js > browserify.js\nnpx browserify xlsxworker.js > worker.js\n")),(0,l.kt)("p",null,"4) Spin up a local web server:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"npx http-server\n")),(0,l.kt)("p",null,"5) Access the site ",(0,l.kt)("a",{parentName:"p",href:"http://localhost:8080/"},"http://localhost:8080/")," and use the file input element to\nselect a spreadsheet.")),(0,l.kt)("h2",{id:"bun"},"Bun"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bun bun")," is capable of optimizing imported libraries in ",(0,l.kt)("inlineCode",{parentName:"p"},"node_modules"),".  In\nlocal testing, a bundled script can save tens of milliseconds per run."),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Complete Example")," (click to show)"),(0,l.kt)("p",null,"1) Install the tarball using a package manager:"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i --save https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ pnpm install https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"yarn",label:"Yarn",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz")))),(0,l.kt)("p",null,"2) Save the following script to ",(0,l.kt)("inlineCode",{parentName:"p"},"bun.js"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="bun.js"',title:'"bun.js"'},'// highlight-next-line\nimport * as XLSX from \'xlsx/xlsx.mjs\';\n// highlight-next-line\nimport * as fs from \'fs\';\n// highlight-next-line\nXLSX.set_fs(fs);\n\n/* fetch JSON data and parse */\nconst url = "https://sheetjs.com/executive.json";\nconst raw_data = await (await fetch(url)).json();\n\n/* filter for the Presidents */\nconst prez = raw_data.filter((row) => row.terms.some((term) => term.type === "prez"));\n\n/* flatten objects */\nconst rows = prez.map((row) => ({\n  name: row.name.first + " " + row.name.last,\n  birthday: row.bio.birthday\n}));\n\n/* generate worksheet and workbook */\nconst worksheet = XLSX.utils.json_to_sheet(rows);\nconst workbook = XLSX.utils.book_new();\nXLSX.utils.book_append_sheet(workbook, worksheet, "Dates");\n\n/* fix headers */\nXLSX.utils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n/* calculate column width */\nconst max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\nworksheet["!cols"] = [ { wch: max_width } ];\n\n/* create an XLSX file and try to save to Presidents.xlsx */\nXLSX.writeFile(workbook, "Presidents.xlsx");\n')),(0,l.kt)("p",null,"3) Bundle the script with ",(0,l.kt)("inlineCode",{parentName:"p"},"bun bun"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"bun bun bun.js\n")),(0,l.kt)("p",null,"This procedure will generate ",(0,l.kt)("inlineCode",{parentName:"p"},"node_modules.bun"),"."),(0,l.kt)("p",null,"4) Run the script"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"bun bun.js\n"))),(0,l.kt)("h2",{id:"esbuild"},"ESBuild"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"xlsx.mjs")," source file are written in a subset of ES6 that ESBuild\nunderstands and is able to transpile down for older browsers."),(0,l.kt)("p",null,"Both the ",(0,l.kt)("inlineCode",{parentName:"p"},"node")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"browser")," platforms work out of the box."),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Complete Example")," (click to show)"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"browser",label:"Browser",mdxType:"TabItem"},(0,l.kt)("p",null,"1) Install the tarball using a package manager:"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i --save https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ pnpm install https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"yarn",label:"Yarn",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz")))),(0,l.kt)("p",null,"2) Save the following to ",(0,l.kt)("inlineCode",{parentName:"p"},"esbrowser.js"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="esbrowser.js"',title:'"esbrowser.js"'},'// highlight-next-line\nimport { utils, version, writeFileXLSX } from \'xlsx/xlsx.mjs\';\n\n(async() => {\n/* fetch JSON data and parse */\nconst url = "https://sheetjs.com/executive.json";\nconst raw_data = await (await fetch(url)).json();\n\n/* filter for the Presidents */\nconst prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));\n\n/* flatten objects */\nconst rows = prez.map(row => ({\n  name: row.name.first + " " + row.name.last,\n  birthday: row.bio.birthday\n}));\n\n/* generate worksheet and workbook */\nconst worksheet = utils.json_to_sheet(rows);\nconst workbook = utils.book_new();\nutils.book_append_sheet(workbook, worksheet, "Dates");\n\n/* fix headers */\nutils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n/* calculate column width */\nconst max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\nworksheet["!cols"] = [ { wch: max_width } ];\n\n/* create an XLSX file and try to save to Presidents.xlsx */\nwriteFileXLSX(workbook, "Presidents.xlsx");\n})();\n')),(0,l.kt)("p",null,"3) Create a small HTML page that loads the script.  Save to ",(0,l.kt)("inlineCode",{parentName:"p"},"index.html"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},'<body><script src="esb.browser.js"><\/script></body>\n')),(0,l.kt)("p",null,"4) Create bundle:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx esbuild esbrowser.js --bundle --outfile=esb.browser.js\n")),(0,l.kt)("p",null,"5) Start a local HTTP server, then go to http://localhost:8080/"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx http-server .\n"))),(0,l.kt)(o.Z,{value:"nodejs",label:"NodeJS",mdxType:"TabItem"},(0,l.kt)("p",null,"1) Install the tarball using a package manager:"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i --save https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ pnpm install https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"yarn",label:"Yarn",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz")))),(0,l.kt)("p",null,"2) Save the following to ",(0,l.kt)("inlineCode",{parentName:"p"},"esbnode.js"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="esbnode.js"',title:'"esbnode.js"'},'// highlight-next-line\nimport { set_fs, utils, version, writeFile } from \'xlsx/xlsx.mjs\';\n// highlight-next-line\nimport * as fs from \'fs\';\n// highlight-next-line\nset_fs(fs);\n\n(async() => {\n/* fetch JSON data and parse */\nconst url = "https://sheetjs.com/executive.json";\nconst raw_data = await (await fetch(url)).json();\n\n/* filter for the Presidents */\nconst prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));\n\n/* flatten objects */\nconst rows = prez.map(row => ({\n  name: row.name.first + " " + row.name.last,\n  birthday: row.bio.birthday\n}));\n\n/* generate worksheet and workbook */\nconst worksheet = utils.json_to_sheet(rows);\nconst workbook = utils.book_new();\nutils.book_append_sheet(workbook, worksheet, "Dates");\n\n/* fix headers */\nutils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n/* calculate column width */\nconst max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\nworksheet["!cols"] = [ { wch: max_width } ];\n\n/* create an XLSX file and try to save to Presidents.xlsx */\nwriteFile(workbook, "Presidents.xlsx");\n})();\n')),(0,l.kt)("p",null,"3) Create bundle:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx esbuild esbnode.js --bundle --platform=node --outfile=esb.node.js\n")),(0,l.kt)("p",null,"4) Run the bundle:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"node esb.node.js\n"))))),(0,l.kt)("h2",{id:"parcel"},"Parcel"),(0,l.kt)("p",null,"Parcel Bundler should play nice with SheetJS out of the box."),(0,l.kt)("admonition",{title:"Parcel Bug",type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"Errors of the form ",(0,l.kt)("inlineCode",{parentName:"p"},"Could not statically evaluate fs call")," stem from a\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/parcel-bundler/parcel/pull/523"},"parcel bug"),". Upgrade to\nParcel version 1.5.0 or later.")),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Complete Example")," (click to show)"),(0,l.kt)("p",null,"This demo follows the ",(0,l.kt)("a",{parentName:"p",href:"../../example"},"Presidents Example"),"."),(0,l.kt)("p",null,"1) Save the following to ",(0,l.kt)("inlineCode",{parentName:"p"},"index.html"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},'<body>\n<h3>SheetJS <span id="vers"></span> export demo</h3>\n<button id="xport">Click to Export!</button>\n\x3c!-- the script tag must be marked as `type="module"` --\x3e\n\x3c!-- highlight-next-line --\x3e\n<script type="module">\n// ESM-style import from "xlsx"\n// highlight-next-line\nimport { utils, version, writeFileXLSX } from \'xlsx\';\n\ndocument.getElementById("vers").innerText = version;\ndocument.getElementById("xport").onclick = async() => {\n  /* fetch JSON data and parse */\n  const url = "https://sheetjs.com/executive.json";\n  const raw_data = await (await fetch(url)).json();\n\n  /* filter for the Presidents */\n  const prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));\n\n  /* flatten objects */\n  const rows = prez.map(row => ({\n    name: row.name.first + " " + row.name.last,\n    birthday: row.bio.birthday\n  }));\n\n  /* generate worksheet and workbook */\n  const worksheet = utils.json_to_sheet(rows);\n  const workbook = utils.book_new();\n  utils.book_append_sheet(workbook, worksheet, "Dates");\n\n  /* fix headers */\n  utils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n  /* calculate column width */\n  const max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\n  worksheet["!cols"] = [ { wch: max_width } ];\n\n  /* create an XLSX file and try to save to Presidents.xlsx */\n  writeFileXLSX(workbook, "Presidents.xlsx");\n};\n<\/script>\n<body>\n')),(0,l.kt)("p",null,"2) Install the SheetJS node module:"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i --save https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ pnpm install https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"yarn",label:"Yarn",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz")))),(0,l.kt)("p",null,"3) Run the Parcel CLI tool:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx -y parcel index.html\n")),(0,l.kt)("p",null,"4) Access the page listed in the output (typically ",(0,l.kt)("inlineCode",{parentName:"p"},"http://localhost:1234"),') and\nclick the "Click to Export!" button to generate a file.')),(0,l.kt)("h2",{id:"requirejs"},"RequireJS"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../../installation/standalone"},"Standalone scripts")," comply with AMD ",(0,l.kt)("inlineCode",{parentName:"p"},"define"),"\nsemantics, enabling use in RequireJS out of the box."),(0,l.kt)("p",null,"To enable use of the alias ",(0,l.kt)("inlineCode",{parentName:"p"},"xlsx"),", the RequireJS config should set an alias in\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"paths")," property:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'require.config({\n  baseUrl: ".",\n  name: "app",\n  paths: {\n    // highlight-next-line\n    xlsx: "xlsx.full.min"\n  }\n});\n// highlight-next-line\nrequire(["xlsx"], function(XLSX) {\n  /* use XLSX here */\n  console.log(XLSX.version);\n});\n')),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"pathname:///requirejs/requirejs.html"},"Live demo")," loads RequireJS from the\nCDN, uses it to load the standalone script from the SheetJS CDN, and uses the\n",(0,l.kt)("inlineCode",{parentName:"p"},"XLSX")," variable to create a button click handler that creates a workbook."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"r.js")," optimizer also supports the standalone scripts."),(0,l.kt)("h2",{id:"rollup"},"Rollup"),(0,l.kt)("p",null,"Rollup requires ",(0,l.kt)("inlineCode",{parentName:"p"},"@rollup/plugin-node-resolve")," to support NodeJS modules:"),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Complete Example")," (click to show)"),(0,l.kt)("p",null,"1) Install the tarball using a package manager:"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i --save https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"," rollup @rollup/plugin-node-resolve"))),(0,l.kt)(o.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ pnpm install https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"," rollup @rollup/plugin-node-resolve"))),(0,l.kt)(o.Z,{value:"yarn",label:"Yarn",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"," rollup @rollup/plugin-node-resolve")))),(0,l.kt)("p",null,"2) Save the following to ",(0,l.kt)("inlineCode",{parentName:"p"},"index.js"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},'// highlight-next-line\nimport { utils, version, writeFileXLSX } from \'xlsx/xlsx.mjs\';\n\ndocument.getElementById("xport").addEventListener("click", async() => {\n/* fetch JSON data and parse */\nconst url = "https://sheetjs.com/executive.json";\nconst raw_data = await (await fetch(url)).json();\n\n/* filter for the Presidents */\nconst prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));\n\n/* flatten objects */\nconst rows = prez.map(row => ({\n  name: row.name.first + " " + row.name.last,\n  birthday: row.bio.birthday\n}));\n\n/* generate worksheet and workbook */\nconst worksheet = utils.json_to_sheet(rows);\nconst workbook = utils.book_new();\nutils.book_append_sheet(workbook, worksheet, "Dates");\n\n/* fix headers */\nutils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n/* calculate column width */\nconst max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\nworksheet["!cols"] = [ { wch: max_width } ];\n\n/* create an XLSX file and try to save to Presidents.xlsx */\nwriteFileXLSX(workbook, "Presidents.xlsx");\n});\n')),(0,l.kt)("p",null,"3) Bundle the script:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx rollup index.js --plugin @rollup/plugin-node-resolve --file bundle.js --format iife\n")),(0,l.kt)("p",null,"4) Create a small HTML page that loads the script.  Save to ",(0,l.kt)("inlineCode",{parentName:"p"},"index.html"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},'<!DOCTYPE html>\n<html lang="en">\n  <head></head>\n  <body>\n    <h1>SheetJS Presidents Demo</h1>\n    <button id="xport">Click here to export</button>\n    <script type="module" src="./bundle.js"><\/script>\n  </body>\n</html>\n')),(0,l.kt)("p",null,"5) Start a local HTTP server, then go to http://localhost:8080/"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx http-server .\n")),(0,l.kt)("p",null,'Click on "Click here to export" to generate a file.')),(0,l.kt)("h2",{id:"snowpack"},"Snowpack"),(0,l.kt)("p",null,"Snowpack works with no caveats."),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Complete Example")," (click to show)"),(0,l.kt)("p",null,"1) Install the tarball using a package manager:"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i --save https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ pnpm install https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"yarn",label:"Yarn",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz")))),(0,l.kt)("p",null,"2) Save the following to ",(0,l.kt)("inlineCode",{parentName:"p"},"index.js"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},'// highlight-next-line\nimport { utils, version, writeFileXLSX } from \'xlsx/xlsx.mjs\';\n\ndocument.getElementById("xport").addEventListener("click", async() => {\n/* fetch JSON data and parse */\nconst url = "https://sheetjs.com/executive.json";\nconst raw_data = await (await fetch(url)).json();\n\n/* filter for the Presidents */\nconst prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));\n\n/* flatten objects */\nconst rows = prez.map(row => ({\n  name: row.name.first + " " + row.name.last,\n  birthday: row.bio.birthday\n}));\n\n/* generate worksheet and workbook */\nconst worksheet = utils.json_to_sheet(rows);\nconst workbook = utils.book_new();\nutils.book_append_sheet(workbook, worksheet, "Dates");\n\n/* fix headers */\nutils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n/* calculate column width */\nconst max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\nworksheet["!cols"] = [ { wch: max_width } ];\n\n/* create an XLSX file and try to save to Presidents.xlsx */\nwriteFileXLSX(workbook, "Presidents.xlsx");\n});\n')),(0,l.kt)("p",null,"3) Create a small HTML page that loads the script.  Save to ",(0,l.kt)("inlineCode",{parentName:"p"},"index.html"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},'<!DOCTYPE html>\n<html lang="en">\n  <head></head>\n  <body>\n    <h1>SheetJS Presidents Demo</h1>\n    <button id="xport">Click here to export</button>\n    <script type="module" src="./index.js"><\/script>\n  </body>\n</html>\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Unlike other bundlers, Snowpack requires a full page including ",(0,l.kt)("inlineCode",{parentName:"p"},"HEAD")," element.")),(0,l.kt)("p",null,"4) Build for production:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx snowpack build\n")),(0,l.kt)("p",null,"5) Start a local HTTP server, then go to http://localhost:8080/"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx http-server build/\n")),(0,l.kt)("p",null,'Click on "Click here to export" to generate a file.')),(0,l.kt)("h2",{id:"swc"},"SWC"),(0,l.kt)("p",null,"SWC provides ",(0,l.kt)("inlineCode",{parentName:"p"},"spack")," for bundling scripts."),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Complete Example")," (click to show)"),(0,l.kt)("p",null,"1) Install the dependencies using a package manager:"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i --save https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"," regenerator-runtime @swc/cli @swc/core"))),(0,l.kt)(o.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ pnpm install https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"," regenerator-runtime @swc/cli @swc/core"))),(0,l.kt)(o.Z,{value:"yarn",label:"Yarn",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"," regenerator-runtime @swc/cli @swc/core")))),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"The ",(0,l.kt)("inlineCode",{parentName:"p"},"regenerator-runtime")," dependency is used for transpiling ",(0,l.kt)("inlineCode",{parentName:"p"},"fetch")," and is not\nrequired if the interface code does not use ",(0,l.kt)("inlineCode",{parentName:"p"},"fetch")," or Promises.")),(0,l.kt)("p",null,"2) Save the following to ",(0,l.kt)("inlineCode",{parentName:"p"},"index.js"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},'import { utils, version, writeFileXLSX } from \'xlsx\';\n\ndocument.getElementById("xport").addEventListener("click", async() => {\n/* fetch JSON data and parse */\nconst url = "https://sheetjs.com/executive.json";\nconst raw_data = await (await fetch(url)).json();\n\n/* filter for the Presidents */\nconst prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));\n\n/* flatten objects */\nconst rows = prez.map(row => ({\n  name: row.name.first + " " + row.name.last,\n  birthday: row.bio.birthday\n}));\n\n/* generate worksheet and workbook */\nconst worksheet = utils.json_to_sheet(rows);\nconst workbook = utils.book_new();\nutils.book_append_sheet(workbook, worksheet, "Dates");\n\n/* fix headers */\nutils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n/* calculate column width */\nconst max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\nworksheet["!cols"] = [ { wch: max_width } ];\n\n/* create an XLSX file and try to save to Presidents.xlsx */\nwriteFileXLSX(workbook, "Presidents.xlsx");\n});\n')),(0,l.kt)("p",null,"3) Create an ",(0,l.kt)("inlineCode",{parentName:"p"},"spack.config.js")," config file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="spack.config.js"',title:'"spack.config.js"'},"const { config } = require('@swc/core/spack');\n\nmodule.exports = ({\n  entry: {\n    'web': __dirname + '/index.js',\n  },\n  output: {\n    path: __dirname + '/lib'\n  },\n  module: {},\n});\n")),(0,l.kt)("p",null,"4) Build for production:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx spack\n")),(0,l.kt)("p",null,"This command will create the script ",(0,l.kt)("inlineCode",{parentName:"p"},"lib/web.js")),(0,l.kt)("p",null,"5) Create a small HTML page that loads the generated script:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},'<!DOCTYPE html>\n<html lang="en">\n  <head></head>\n  <body>\n    <h1>SheetJS Presidents Demo</h1>\n    <button id="xport">Click here to export</button>\n    <script src="lib/web.js"><\/script>\n  </body>\n</html>\n')),(0,l.kt)("p",null,"6) Start a local HTTP server, then go to http://localhost:8080/"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx http-server build/\n")),(0,l.kt)("p",null,'Click on "Click here to export" to generate a file.')),(0,l.kt)("h2",{id:"vite"},"Vite"),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"ViteJS adopted nascent ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json")," patterns. Version 0.18.10 implements the\npatterns required for ViteJS 3.0.3. These patterns are evolving and a future\nversion of Vite may require more packaging changes.")),(0,l.kt)("p",null,"ViteJS 3.0.3 is known to work with SheetJS version 0.18.10."),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Complete Example")," (click to show)"),(0,l.kt)("p",null,"1) Create a new ViteJS project:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"npm create vite@latest\ncd sheetjs-vite # (project name)\nnpm i\n")),(0,l.kt)("p",null,"When prompted for ",(0,l.kt)("strong",{parentName:"p"},"Project Name"),", type ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"sheetjs-vite"))),(0,l.kt)("p",null,"When prompted for ",(0,l.kt)("strong",{parentName:"p"},"Framework"),", select ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"vue"))," then ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"vue-ts"))),(0,l.kt)("p",null,"2) Add the SheetJS dependency:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i --save https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz")),(0,l.kt)("p",null,"3) Replace ",(0,l.kt)("inlineCode",{parentName:"p"},"src\\components\\HelloWorld.vue")," with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="src\\components\\HelloWorld.vue"',title:'"src\\components\\HelloWorld.vue"'},'<script setup lang="ts">\nimport { version, utils, writeFileXLSX } from \'xlsx\';\n\ninterface President {\n  terms: { "type": "prez" | "viceprez"; }[];\n  name: { first: string; last: string; }\n  bio: { birthday: string; }\n}\n\nasync function xport() {\n/* fetch JSON data and parse */\nconst url = "https://sheetjs.com/executive.json";\nconst raw_data: President[] = await (await fetch(url)).json();\n\n/* filter for the Presidents */\nconst prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));\n\n/* flatten objects */\nconst rows = prez.map(row => ({\n  name: row.name.first + " " + row.name.last,\n  birthday: row.bio.birthday\n}));\n\n/* generate worksheet and workbook */\nconst worksheet = utils.json_to_sheet(rows);\nconst workbook = utils.book_new();\nutils.book_append_sheet(workbook, worksheet, "Dates");\n\n/* fix headers */\nutils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n/* calculate column width */\nconst max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\nworksheet["!cols"] = [ { wch: max_width } ];\n\n/* create an XLSX file and try to save to Presidents.xlsx */\nwriteFileXLSX(workbook, "Presidents.xlsx");\n}\n\n<\/script>\n\n<template>\n  <button type="button" @click="xport">Export with SheetJS version {{ version }}</button>\n</template>\n')),(0,l.kt)("p",null,"4) Run ",(0,l.kt)("inlineCode",{parentName:"p"},"npm run dev")," and test functionality by opening a web browser to\nhttp://localhost:5173/ and clicking the button"),(0,l.kt)("p",null,"5) Run ",(0,l.kt)("inlineCode",{parentName:"p"},"npx vite build")," and verify the generated pages work by running a local\nweb server in the ",(0,l.kt)("inlineCode",{parentName:"p"},"dist")," folder:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"npx http-server dist/\n")),(0,l.kt)("p",null,"Access http://localhost:8080 in your web browser.")),(0,l.kt)("h2",{id:"wmr"},"WMR"),(0,l.kt)("p",null,"WMR follows the same structure as Snowpack"),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("b",null,"Complete Example")," (click to show)"),(0,l.kt)("p",null,"1) Install the tarball using a package manager:"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i --save https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ pnpm install https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz"))),(0,l.kt)(o.Z,{value:"yarn",label:"Yarn",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add https://cdn.sheetjs.com/xlsx-"+r.Z+"/xlsx-"+r.Z+".tgz")))),(0,l.kt)("p",null,"2) Save the following to ",(0,l.kt)("inlineCode",{parentName:"p"},"index.js"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},'// highlight-next-line\nimport { utils, version, writeFileXLSX } from \'xlsx/xlsx.mjs\';\n\ndocument.getElementById("xport").addEventListener("click", async() => {\n/* fetch JSON data and parse */\nconst url = "https://sheetjs.com/executive.json";\nconst raw_data = await (await fetch(url)).json();\n\n/* filter for the Presidents */\nconst prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));\n\n/* flatten objects */\nconst rows = prez.map(row => ({\n  name: row.name.first + " " + row.name.last,\n  birthday: row.bio.birthday\n}));\n\n/* generate worksheet and workbook */\nconst worksheet = utils.json_to_sheet(rows);\nconst workbook = utils.book_new();\nutils.book_append_sheet(workbook, worksheet, "Dates");\n\n/* fix headers */\nutils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n/* calculate column width */\nconst max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\nworksheet["!cols"] = [ { wch: max_width } ];\n\n/* create an XLSX file and try to save to Presidents.xlsx */\nwriteFileXLSX(workbook, "Presidents.xlsx");\n});\n')),(0,l.kt)("p",null,"3) Create a small HTML page that loads the script.  Save to ",(0,l.kt)("inlineCode",{parentName:"p"},"index.html"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},'<!DOCTYPE html>\n<html lang="en">\n  <head></head>\n  <body>\n    <h1>SheetJS Presidents Demo</h1>\n    <button id="xport">Click here to export</button>\n    <script type="module" src="./index.js"><\/script>\n  </body>\n</html>\n')),(0,l.kt)("p",null,"4) Build for production:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx wmr build\n")),(0,l.kt)("p",null,"5) Start a local HTTP server in ",(0,l.kt)("inlineCode",{parentName:"p"},"dist")," folder and go to http://localhost:8080/"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx http-server dist/\n")),(0,l.kt)("p",null,'Click on "Click here to export" to generate a file.')))}h.isMDXComponent=!0}}]);