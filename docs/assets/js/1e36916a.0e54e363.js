"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[83],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return u}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(r),u=a,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||o;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},314:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],l={sidebar_position:6},s="Clipboard Data",p={unversionedId:"getting-started/demos/clipboard",id:"getting-started/demos/clipboard",title:"Clipboard Data",description:"Spreadsheet software like Excel typically support copying and pasting cells and",source:"@site/docs/04-getting-started/03-demos/06-clipboard.md",sourceDirName:"04-getting-started/03-demos",slug:"/getting-started/demos/clipboard",permalink:"/docs/getting-started/demos/clipboard",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Salesforce LWC",permalink:"/docs/getting-started/demos/salesforce"},next:{title:"Interface Summary",permalink:"/docs/interface"}},c={},d=[{value:"Browser",id:"browser",level:2},{value:"Live Demo",id:"live-demo",level:3}],m={toc:d};function u(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"clipboard-data"},"Clipboard Data"),(0,o.kt)("p",null,'Spreadsheet software like Excel typically support copying and pasting cells and\ndata. This is implemented through the Clipboard ("Pasteboard" in OSX parlance).'),(0,o.kt)("p",null,"When copying a selection of cells, Excel for Windows stores a screenshot of the\nselected cells as an image.  It also creates and stores a number of strings and\nfiles for the various formats, including TSV, CSV, HTML, RTF, SYLK, DIF, XLSB,\nXLS (both '97-2004 and '95), and SpreadsheetML 2003."),(0,o.kt)("p",null,"Not all Clipboard APIs offer access to all clipboard types."),(0,o.kt)("h2",{id:"browser"},"Browser"),(0,o.kt)("p",null,"Clipboard data can be read from a ",(0,o.kt)("inlineCode",{parentName:"p"},"paste")," event, accessible from the event\n",(0,o.kt)("inlineCode",{parentName:"p"},"clipboardData")," property:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"document.onpaste = function(e) {\n  /* get TSV */\n  var str = e.clipboardData.getData('text/html');\n  /* parse */\n  var wb = XLSX.read(str, {type: \"string\"});\n  /* DO SOMETHING WITH wb HERE */\n}\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"getData")," accepts one argument: the desired MIME type. Chrome 103 supports:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"MIME type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Data format"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"text/plain")),(0,o.kt)("td",{parentName:"tr",align:"left"},"TSV (tab separated values)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"text/html")),(0,o.kt)("td",{parentName:"tr",align:"left"},"HTML")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"text/rtf")),(0,o.kt)("td",{parentName:"tr",align:"left"},"RTF (rich text format)")))),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"getData")," returns a string compatible with the ",(0,o.kt)("inlineCode",{parentName:"p"},"string")," type for ",(0,o.kt)("inlineCode",{parentName:"p"},"XLSX.read"),"."),(0,o.kt)("h3",{id:"live-demo"},"Live Demo"),(0,o.kt)("p",null,'Open a file in Excel, copy some cells, then come back to this window.  Click on\n"RESULT" below and paste (Control+V for Windows, Command+V for Mac).'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function Clipboard() {\n  const [csvs, setCSVs] = React.useState([ "", "", "" ]);\n\n  /* Set up paste handler */\n  React.useEffect(async() => {\n    document.onpaste = function(e) {\n      /* this demo will read 3 different clipboard data types */\n      var mime_arr = [ \'text/plain\', \'text/html\', \'text/rtf\' ];\n      /* get clipboard data for each type */\n      var data_arr = mime_arr.map(mime => e.clipboardData.getData(mime));\n      /* parse each data string into a workbook */\n      var wb_arr = data_arr.map(str => XLSX.read(str, {type: "string"}));\n      /* get first worksheet from each workbook */\n      var ws_arr = wb_arr.map(wb => wb.Sheets[wb.SheetNames[0]]);\n      /* generate CSV for each "first worksheet" */\n      var result = ws_arr.map(ws => XLSX.utils.sheet_to_csv(ws));\n      setCSVs(result);\n    }\n  }, []);\n\n  return (\n    <>\n      {csvs[0] && (<pre><b>Data from clipboard TSV  (text/plain)</b><br/>{csvs[0]}</pre>)}\n      {csvs[1] && (<pre><b>Data from clipboard HTML (text/html)</b><br/>{csvs[1]}</pre>)}\n      {csvs[2] && (<pre><b>Data from clipboard RTF  (text/rtf)</b><br/>{csvs[2]}</pre>)}\n      {csvs.every(x => !x) && <b>Copy data in Excel, click here, and paste (Control+V)</b>}\n    </>\n  )\n}\n')))}u.isMDXComponent=!0}}]);