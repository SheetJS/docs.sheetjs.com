"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1724],{9613:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6996:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(2848),o=n(9213),a=(n(9496),n(9613)),s=["components"],i={sidebar_position:13,title:"Command-Line Tools"},l=void 0,c={unversionedId:"getting-started/demos/cli",id:"getting-started/demos/cli",title:"Command-Line Tools",description:"With the availability of JS engines and the success of server-side runtimes, it",source:"@site/docs/04-getting-started/03-demos/13-cli.md",sourceDirName:"04-getting-started/03-demos",slug:"/getting-started/demos/cli",permalink:"/docs/getting-started/demos/cli",draft:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13,title:"Command-Line Tools"},sidebar:"tutorialSidebar",previous:{title:"Legacy Frameworks",permalink:"/docs/getting-started/demos/legacy"},next:{title:"Data Grids and UI",permalink:"/docs/getting-started/demos/grid"}},p={},u=[{value:"Deno",id:"deno",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"With the availability of JS engines and the success of server-side runtimes, it\nis natural to want command-line tools for various workflows."),(0,a.kt)("p",null,"This demo covers a number of strategies for building standalone processors. The\ngoal is to generate CSV output from an arbitrary spreadsheet file."),(0,a.kt)("h2",{id:"deno"},"Deno"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"deno compile")," generates a standalone executable that includes the entire JS\nruntime as well as user JS code."),(0,a.kt)("p",null,"When compiling, the ",(0,a.kt)("inlineCode",{parentName:"p"},"--allow-read")," option must be specified to allow the script\nto read files from the filesystem with ",(0,a.kt)("inlineCode",{parentName:"p"},"Deno.readFileSync"),"."),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("b",null,"Complete Example")," (click to show)"),(0,a.kt)("p",null,"1) Save the following script to ",(0,a.kt)("inlineCode",{parentName:"p"},"sheet2csv.ts"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="sheet2csv.ts"',title:'"sheet2csv.ts"'},"/*! sheetjs (C) 2013-present SheetJS -- http://sheetjs.com */\n// @deno-types=\"https://cdn.sheetjs.com/xlsx-latest/package/types/index.d.ts\"\nimport * as XLSX from 'https://cdn.sheetjs.com/xlsx-latest/package/xlsx.mjs';\nimport * as cptable from 'https://cdn.sheetjs.com/xlsx-latest/package/dist/cpexcel.full.mjs';\nXLSX.set_cptable(cptable);\n\n/* Read and parse workbook */\nconst filename = Deno.args[0];\nif(!filename) {\n    console.error(\"usage: sheet2csv <filename> [sheetname]\");\n    Deno.exit(1);\n}\nconst workbook = XLSX.readFile(filename);\n\n/* Find worksheet */\nconst sheetname = Deno.args[1] || workbook.SheetNames[0];\nif(!workbook.Sheets[sheetname]) {\n    console.error(`error: workbook missing sheet ${sheetname}`);\n    Deno.exit(1);\n}\n\n/* Generate CSV and print to stdout */\nconsole.log(XLSX.utils.sheet_to_csv(workbook.Sheets[sheetname]));\n")),(0,a.kt)("p",null,"2) Build ",(0,a.kt)("inlineCode",{parentName:"p"},"sheet2csv")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"deno compile"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"deno compile -r --allow-read sheet2csv.ts\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"sheet2csv")," is a generated executable that you can run.")))}m.isMDXComponent=!0}}]);