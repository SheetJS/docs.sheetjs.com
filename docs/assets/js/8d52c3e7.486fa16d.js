"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[783],{9613:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,m=u["".concat(i,".").concat(h)]||u[h]||d[h]||o;return n?a.createElement(m,s(s({ref:t},c),{},{components:n})):a.createElement(m,s({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7073:function(e,t,n){n.d(t,{Z:function(){return s}});var a=n(9496),r=n(1626),o="tabItem_XTJJ";function s(e){var t=e.children,n=e.hidden,s=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,s),hidden:n},t)}},7632:function(e,t,n){n.d(t,{Z:function(){return h}});var a=n(2848),r=n(9496),o=n(8745),s=n(2586),l=n(1060),i=n(2876),p=n(1626),c="tabList_ECWZ",d="tabItem_T58J";function u(e){var t,n,o,u=e.lazy,h=e.block,m=e.defaultValue,w=e.values,k=e.groupId,f=e.className,b=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=w?w:b.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),y=(0,s.l)(g,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===m?m:null!=(t=null!=m?m:null==(n=b.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(o=b[0])?void 0:o.props.value;if(null!==v&&!g.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var x=(0,l.U)(),N=x.tabGroupChoices,X=x.setTabGroupChoices,_=(0,r.useState)(v),j=_[0],S=_[1],C=[],L=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=k){var T=N[k];null!=T&&T!==j&&g.some((function(e){return e.value===T}))&&S(T)}var P=function(e){var t=e.currentTarget,n=C.indexOf(t),a=g[n].value;a!==j&&(L(t),S(a),null!=k&&X(k,a))},A=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=C.indexOf(e.currentTarget)+1;n=C[a]||C[0];break;case"ArrowLeft":var r=C.indexOf(e.currentTarget)-1;n=C[r]||C[C.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,p.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":h},f)},g.map((function(e){var t=e.value,n=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:j===t?0:-1,"aria-selected":j===t,key:t,ref:function(e){return C.push(e)},onKeyDown:A,onFocus:P,onClick:P},o,{className:(0,p.Z)("tabs__item",d,null==o?void 0:o.className,{"tabs__item--active":j===t})}),null!=n?n:t)}))),u?(0,r.cloneElement)(b.filter((function(e){return e.props.value===j}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==j})}))))}function h(e){var t=(0,o.Z)();return r.createElement(u,(0,a.Z)({key:String(t)},e))}},5293:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return w},frontMatter:function(){return p},metadata:function(){return d},toc:function(){return h}});var a=n(2848),r=n(9213),o=(n(9496),n(9613)),s=n(7632),l=n(7073),i=["components"],p={sidebar_position:3},c="Complete Example",d={unversionedId:"example",id:"example",title:"Complete Example",description:'SheetJS presents a simple JS interface that works with "Array of Arrays" and',source:"@site/docs/03-example.mdx",sourceDirName:".",slug:"/example",permalink:"/docs/example",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"ExtendScript",permalink:"/docs/installation/extendscript"},next:{title:"Roadmap",permalink:"/docs/getting-started/roadmap"}},u={},h=[{value:"Acquire Data",id:"acquire-data",level:2},{value:"Raw Data",id:"raw-data",level:3},{value:"Filtering for Presidents",id:"filtering-for-presidents",level:3},{value:"Reshaping the Array",id:"reshaping-the-array",level:3},{value:"Create a Workbook",id:"create-a-workbook",level:2},{value:"Clean up Workbook",id:"clean-up-workbook",level:2},{value:"Export a File",id:"export-a-file",level:2},{value:"Live Demo",id:"live-demo",level:2},{value:"Run the Demo Locally",id:"run-the-demo-locally",level:2}],m={toc:h};function w(e){var t=e.components,p=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,p,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"complete-example"},"Complete Example"),(0,o.kt)("p",null,'SheetJS presents a simple JS interface that works with "Array of Arrays" and\n"Array of JS Objects".  The API functions are building blocks that should be\ncombined with other JS APIs to solve problems.'),(0,o.kt)("p",null,"The discussion focuses on the problem solving mindset.  API details are covered\nin other parts of the documentation."),(0,o.kt)("p",null,"The goal of this example is to generate a XLSX workbook of US President names\nand birthdays.  ",(0,o.kt)("a",{parentName:"p",href:"#live-demo"},"Click here")," to jump to the live demo"),(0,o.kt)("h2",{id:"acquire-data"},"Acquire Data"),(0,o.kt)("h3",{id:"raw-data"},"Raw Data"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://theunitedstates.io/congress-legislators/executive.json"},"The raw data is available in JSON form"),".\nFor convenience, it has been ",(0,o.kt)("a",{parentName:"p",href:"https://sheetjs.com/executive.json"},"mirrored here")),(0,o.kt)("p",null,"The data result is an Array of objects.  This is the data for John Adams:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "id": { /* (data omitted) */ },\n  "name": {\n    "first": "John",          // <-- first name\n    "last": "Adams"           // <-- last name\n  },\n  "bio": {\n    "birthday": "1735-10-19", // <-- birthday\n    "gender": "M"\n  },\n  "terms": [\n    { "type": "viceprez", /* (other fields omitted) */ },\n    { "type": "viceprez", /* (other fields omitted) */ },\n    { "type": "prez", /* (other fields omitted) */ }\n  ]\n}\n')),(0,o.kt)("h3",{id:"filtering-for-presidents"},"Filtering for Presidents"),(0,o.kt)("p",null,"The dataset includes Aaron Burr, a Vice President who was never President!"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Array#filter")," creates a new array with the desired rows.  A President served\nat least one term with ",(0,o.kt)("inlineCode",{parentName:"p"},"type")," set to ",(0,o.kt)("inlineCode",{parentName:"p"},'"prez"'),".  To test if a particular row has\nat least one ",(0,o.kt)("inlineCode",{parentName:"p"},'"prez"')," term, ",(0,o.kt)("inlineCode",{parentName:"p"},"Array#some")," is another native JS function.  The\ncomplete filter would be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));\n')),(0,o.kt)("h3",{id:"reshaping-the-array"},"Reshaping the Array"),(0,o.kt)("p",null,"For this example, the name will be the first name combined with the last name\n(",(0,o.kt)("inlineCode",{parentName:"p"},'row.name.first + " " + row.name.last'),") and the birthday will be the subfield\n",(0,o.kt)("inlineCode",{parentName:"p"},"row.bio.birthday"),".  Using ",(0,o.kt)("inlineCode",{parentName:"p"},"Array#map"),", the dataset can be massaged in one call:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const rows = prez.map(row => ({\n  name: row.name.first + " " + row.name.last,\n  birthday: row.bio.birthday\n}));\n')),(0,o.kt)("p",null,'The result is an array of "simple" objects with no nesting:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'[\n  { name: "George Washington", birthday: "1732-02-22" },\n  { name: "John Adams", birthday: "1735-10-19" },\n  // ... one row per President\n]\n')),(0,o.kt)("h2",{id:"create-a-workbook"},"Create a Workbook"),(0,o.kt)("p",null,"With the cleaned dataset, ",(0,o.kt)("inlineCode",{parentName:"p"},"XLSX.utils.json_to_sheet")," generates a worksheet:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const worksheet = XLSX.utils.json_to_sheet(rows);\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"XLSX.utils.book_new")," creates a new workbook and ",(0,o.kt)("inlineCode",{parentName:"p"},"XLSX.utils.book_append_sheet"),'\nappends a worksheet to the workbook. The new worksheet will be called "Dates":'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const workbook = XLSX.utils.book_new();\nXLSX.utils.book_append_sheet(workbook, worksheet, "Dates");\n')),(0,o.kt)("h2",{id:"clean-up-workbook"},"Clean up Workbook"),(0,o.kt)("p",null,"The data is in the workbook and can be exported."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Rough export",src:n(3961).Z,width:"312",height:"188"})),(0,o.kt)("p",null,"There are multiple opportunities for improvement: the headers can be renamed and\nthe column widths can be adjusted.  ",(0,o.kt)("a",{parentName:"p",href:"https://sheetjs.com/pro"},"SheetJS Pro")," offers\nadditional styling options like cell styling and frozen rows."),(0,o.kt)("details",null,(0,o.kt)("summary",null,(0,o.kt)("b",null,"Changing Header Names")," (click to show)"),(0,o.kt)("p",null,"By default, ",(0,o.kt)("inlineCode",{parentName:"p"},"json_to_sheet"),' creates a worksheet with a header row. In this case,\nthe headers come from the JS object keys: "name" and "birthday".'),(0,o.kt)("p",null,"The headers are in cells A1 and B1.  ",(0,o.kt)("inlineCode",{parentName:"p"},"XLSX.utils.sheet_add_aoa")," can write text\nvalues to the existing worksheet starting at cell A1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'XLSX.utils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n'))),(0,o.kt)("details",null,(0,o.kt)("summary",null,(0,o.kt)("b",null,"Changing Column Widths")," (click to show)"),(0,o.kt)("p",null,"Some of the names are longer than the default column width.  Column widths are\nset by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},'"!cols"')," worksheet property."),(0,o.kt)("p",null,"The following line sets the width of column A to approximately 10 characters:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'worksheet["!cols"] = [ { wch: 10 } ]; // set column A width to 10 characters\n')),(0,o.kt)("p",null,"One ",(0,o.kt)("inlineCode",{parentName:"p"},"Array#reduce")," call over ",(0,o.kt)("inlineCode",{parentName:"p"},"rows")," can calculate the maximum width:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\nworksheet["!cols"] = [ { wch: max_width } ];\n'))),(0,o.kt)("h2",{id:"export-a-file"},"Export a File"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"XLSX.writeFile")," creates a spreadsheet file and tries to write it to the system.\nIn the browser, it will try to prompt the user to download the file.  In NodeJS,\nit will write to the local directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'XLSX.writeFile(workbook, "Presidents.xlsx");\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Final export",src:n(634).Z,width:"402",height:"192"})),(0,o.kt)("h2",{id:"live-demo"},"Live Demo"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function Presidents() { return ( <button onClick={async () => {\n  /* fetch JSON data and parse */\n  const url = "https://sheetjs.com/executive.json";\n  const raw_data = await (await fetch(url)).json();\n\n  /* filter for the Presidents */\n  const prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));\n\n  /* flatten objects */\n  const rows = prez.map(row => ({\n    name: row.name.first + " " + row.name.last,\n    birthday: row.bio.birthday\n  }));\n\n  /* generate worksheet and workbook */\n  const worksheet = XLSX.utils.json_to_sheet(rows);\n  const workbook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(workbook, worksheet, "Dates");\n\n  /* fix headers */\n  XLSX.utils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n  /* calculate column width */\n  const max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\n  worksheet["!cols"] = [ { wch: max_width } ];\n\n  /* create an XLSX file and try to save to Presidents.xlsx */\n  XLSX.writeFile(workbook, "Presidents.xlsx");\n}}><b>Click to Generate file!</b></button> ); }\n')),(0,o.kt)("h2",{id:"run-the-demo-locally"},"Run the Demo Locally"),(0,o.kt)(s.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"browser",label:"Browser",mdxType:"TabItem"},(0,o.kt)("p",null,"Save the following script to ",(0,o.kt)("inlineCode",{parentName:"p"},"snippet.html")," and open the page.  The page must be\nhosted (no ",(0,o.kt)("inlineCode",{parentName:"p"},"file:///")," access)."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://sheetjs.com/pres.html"},"https://sheetjs.com/pres.html")," is a hosted version of the page."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n<script src="https://cdn.sheetjs.com/xlsx-latest/package/dist/xlsx.full.min.js"><\/script>\n<script>\n(async() => {\n  /* fetch JSON data and parse */\n  const url = "https://sheetjs.com/executive.json";\n  const raw_data = await (await fetch(url)).json();\n\n  /* filter for the Presidents */\n  const prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));\n\n  /* flatten objects */\n  const rows = prez.map(row => ({\n    name: row.name.first + " " + row.name.last,\n    birthday: row.bio.birthday\n  }));\n\n  /* generate worksheet and workbook */\n  const worksheet = XLSX.utils.json_to_sheet(rows);\n  const workbook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(workbook, worksheet, "Dates");\n\n  /* fix headers */\n  XLSX.utils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n  /* calculate column width */\n  const max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\n  worksheet["!cols"] = [ { wch: max_width } ];\n\n  /* create an XLSX file and try to save to Presidents.xlsx */\n  XLSX.writeFile(workbook, "Presidents.xlsx");\n})();\n<\/script>\n<body>\n'))),(0,o.kt)(l.Z,{value:"nodejs",label:"NodeJS",mdxType:"TabItem"},(0,o.kt)("p",null,"Install the dependencies:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i --save https://cdn.sheetjs.com/xlsx-latest/xlsx-latest.tgz\n")),(0,o.kt)("p",null,"Save the following script to ",(0,o.kt)("inlineCode",{parentName:"p"},"snippet.js")," and run ",(0,o.kt)("inlineCode",{parentName:"p"},"node snippet.js"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const XLSX = require("xlsx");\n\n(async() => {\n  /* fetch JSON data and parse */\n  const url = "https://sheetjs.com/executive.json";\n  const raw_data = await (await fetch(url)).json();\n\n  /* filter for the Presidents */\n  const prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));\n\n  /* flatten objects */\n  const rows = prez.map(row => ({\n    name: row.name.first + " " + row.name.last,\n    birthday: row.bio.birthday\n  }));\n\n  /* generate worksheet and workbook */\n  const worksheet = XLSX.utils.json_to_sheet(rows);\n  const workbook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(workbook, worksheet, "Dates");\n\n  /* fix headers */\n  XLSX.utils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n  /* calculate column width */\n  const max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\n  worksheet["!cols"] = [ { wch: max_width } ];\n\n  /* create an XLSX file and try to save to Presidents.xlsx */\n  XLSX.writeFile(workbook, "Presidents.xlsx");\n})();\n')),(0,o.kt)("p",null,"Native ",(0,o.kt)("inlineCode",{parentName:"p"},"fetch")," support was added in NodeJS 18.  For older versions of NodeJS,\nthe script will throw an error ",(0,o.kt)("inlineCode",{parentName:"p"},"fetch is not defined"),".  A third-party library\nlike ",(0,o.kt)("inlineCode",{parentName:"p"},"axios")," presents a similar API for fetching data:"),(0,o.kt)("details",null,(0,o.kt)("summary",null,(0,o.kt)("b",null,"Example using axios")," (click to show)"),(0,o.kt)("p",null,"Install the dependencies:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i --save https://cdn.sheetjs.com/xlsx-latest/xlsx-latest.tgz\n")),(0,o.kt)("p",null,"The differences in the script are highlighted below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const XLSX = require("xlsx");\n// highlight-next-line\nconst axios = require("axios");\n\n(async() => {\n  /* fetch JSON data and parse */\n  const url = "https://sheetjs.com/executive.json";\n  // highlight-next-line\n  const raw_data = (await axios(url, {responseType: "json"})).data;\n\n  /* filter for the Presidents */\n  const prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));\n\n  /* flatten objects */\n  const rows = prez.map(row => ({\n    name: row.name.first + " " + row.name.last,\n    birthday: row.bio.birthday\n  }));\n\n  /* generate worksheet and workbook */\n  const worksheet = XLSX.utils.json_to_sheet(rows);\n  const workbook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(workbook, worksheet, "Dates");\n\n  /* fix headers */\n  XLSX.utils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n  /* calculate column width */\n  const max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);\n  worksheet["!cols"] = [ { wch: max_width } ];\n\n  /* create an XLSX file and try to save to Presidents.xlsx */\n  XLSX.writeFile(workbook, "Presidents.xlsx");\n})();\n')))),(0,o.kt)(l.Z,{value:"deno",label:"Deno",mdxType:"TabItem"},(0,o.kt)("p",null,"Save the following script to ",(0,o.kt)("inlineCode",{parentName:"p"},"snippet.ts")," and run with\n",(0,o.kt)("inlineCode",{parentName:"p"},"deno run --allow-net --allow-write snippet.ts"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// @deno-types="https://cdn.sheetjs.com/xlsx-latest/package/types/index.d.ts"\nimport * as XLSX from \'https://cdn.sheetjs.com/xlsx-latest/package/xlsx.mjs\';\n\n/* fetch JSON data and parse */\nconst url = "https://sheetjs.com/executive.json";\nconst raw_data = await (await fetch(url)).json();\n\n/* filter for the Presidents */\nconst prez = raw_data.filter((row: any) => row.terms.some((term: any) => term.type === "prez"));\n\n/* flatten objects */\nconst rows = prez.map((row: any) => ({\n  name: row.name.first + " " + row.name.last,\n  birthday: row.bio.birthday\n}));\n\n/* generate worksheet and workbook */\nconst worksheet = XLSX.utils.json_to_sheet(rows);\nconst workbook = XLSX.utils.book_new();\nXLSX.utils.book_append_sheet(workbook, worksheet, "Dates");\n\n/* fix headers */\nXLSX.utils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });\n\n/* calculate column width */\nconst max_width = rows.reduce((w: number, r: any) => Math.max(w, r.name.length), 10);\nworksheet["!cols"] = [ { wch: max_width } ];\n\n/* create an XLSX file and try to save to Presidents.xlsx */\nXLSX.writeFile(workbook, "Presidents.xlsx");\n')))))}w.isMDXComponent=!0},634:function(e,t,n){t.Z=n.p+"assets/images/final-64b7152fd78c9bb05e535ef2b901a4a3.png"},3961:function(e,t,n){t.Z=n.p+"assets/images/rough-2ddf2a4c202b82f1d9259b3162334dc6.png"}}]);