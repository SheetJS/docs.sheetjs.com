"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9795],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),h=r,m=d["".concat(i,".").concat(h)]||d[h]||u[h]||s;return n?a.createElement(m,o(o({ref:t},p),{},{components:n})):a.createElement(m,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<s;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6232:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const s={sidebar_position:10},o="Excel JavaScript API",l={unversionedId:"demos/excel",id:"demos/excel",title:"Excel JavaScript API",description:"Office 2016 introduced a JavaScript API for interacting with the application.",source:"@site/docs/03-demos/10-excel.md",sourceDirName:"03-demos",slug:"/demos/excel",permalink:"/docs/demos/excel",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Bundlers",permalink:"/docs/demos/bundler"},next:{title:"NoSQL Data Stores",permalink:"/docs/demos/nosql"}},i={},c=[{value:"Creating a new Add-in",id:"creating-a-new-add-in",level:2},{value:"Integrating the SheetJS Library",id:"integrating-the-sheetjs-library",level:2},{value:"Dynamic Arrays and SheetJS Array of Arrays",id:"dynamic-arrays-and-sheetjs-array-of-arrays",level:2},{value:"Fetching Files from the Internet",id:"fetching-files-from-the-internet",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"excel-javascript-api"},"Excel JavaScript API"),(0,r.kt)("p",null,"Office 2016 introduced a JavaScript API for interacting with the application.\nIt offers solutions for custom functions as well as task panes."),(0,r.kt)("p",null,"Excel currently does not provide support for working with Apple Numbers files\nand some legacy file formats.  SheetJS fills the gap."),(0,r.kt)("p",null,"This demo creates a new custom function to add much-needed functionality:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SHEETJS.EXTERN()")," tries to fetch an external spreadsheet and insert the data\ninto the worksheet.")),(0,r.kt)("p",null,"This demo focuses on the basic mechanics.  Advanced topics like Excel Custom\nFunction parameters are covered in the official Office JavaScript API docs.\nSheetJS worksheet metadata and other properties are covered in this doc site."),(0,r.kt)("h2",{id:"creating-a-new-add-in"},"Creating a new Add-in"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Initial Platform Setup")," (click to show)"),(0,r.kt)("p",null,"The tool for generating Office Add-ins depends on NodeJS and various libraries.\n",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/"},"Install NodeJS")," and the required dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"npm install -g yo bower generator-office\n"))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Creating a new Project")," (click to show)"),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"yo office")," from the command line.  It will ask a few questions."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'"Choose a project type": "Excel Custom Functions Add-in project"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'"Choose a script type": "JavaScript",')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'"What do you want to name your add-in?": "SheetJSImport"'))),(0,r.kt)("p",null,"You will see a screen like"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"? Choose a project type: Excel Custom Functions Add-in project\n? Choose a script type: JavaScript\n? What do you want to name your add-in? SheetJSImport\n\n----------------------------------------------------------------------------------\n\n      Creating SheetJSImport add-in for Excel using JavaScript and Excel-functions\nat C:\\Users\\SheetJS\\Documents\\SheetJSImport\n\n----------------------------------------------------------------------------------\n")),(0,r.kt)("p",null,"It helpfully prints out the next steps:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"cd SheetJSImport\nnpm run build\nnpm start\n")),(0,r.kt)("p",null,"If ",(0,r.kt)("a",{parentName:"p",href:"https://vscodium.com/"},"VSCodium")," is installed, the folder can be opened:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"codium .\n"))),(0,r.kt)("p",null,"Running ",(0,r.kt)("inlineCode",{parentName:"p"},"npm start")," will open up a terminal window and a new Excel window with\nthe loaded add-in.  Keep the terminal window open (it can be minimized).  When\nyou make a change, close both the Excel window and the terminal window before\nrunning ",(0,r.kt)("inlineCode",{parentName:"p"},"npm start")," again."),(0,r.kt)("h2",{id:"integrating-the-sheetjs-library"},"Integrating the SheetJS Library"),(0,r.kt)("p",null,"The library can be installed like any other NodeJS module:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm i --save https://cdn.sheetjs.com/xlsx-latest/xlsx-latest.tgz\n")),(0,r.kt)("p",null,"To be sure the library is loaded, remove all of the existing functions from\n",(0,r.kt)("inlineCode",{parentName:"p"},"src\\functions\\functions.js"),".  The new contents should be"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"src\\functions\\functions.js","src\\functions\\functions.js":!0},'var XLSX = require("xlsx");\n\n/**\n * Print SheetJS Library Version\n * @customfunction\n * @returns {string[][]} The SheetJS Library Version.\n */\nfunction version() {\n  return [[XLSX.version]];\n}\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"manifest.xml")," should also be updated to reflect the function namespace:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'        <bt:String id="Functions.Namespace" DefaultValue="SHEETJS"/>\n')),(0,r.kt)("p",null,"After making the change, save the files.  Close the terminal window and the\nExcel window (do not save the Excel file).  Re-run ",(0,r.kt)("inlineCode",{parentName:"p"},"npm start"),"."),(0,r.kt)("p",null,"In the new Excel window, enter the formula ",(0,r.kt)("inlineCode",{parentName:"p"},"=SHEETJS.VERSION()")," in cell ",(0,r.kt)("inlineCode",{parentName:"p"},"E1"),".\nYou should see something similar to the following screenshot:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"/files/xlcfversion.png",alt:"`SHEETJS.VERSION` output"})),(0,r.kt)("p",null,"This indicates that the SheetJS library has been loaded."),(0,r.kt)("h2",{id:"dynamic-arrays-and-sheetjs-array-of-arrays"},"Dynamic Arrays and SheetJS Array of Arrays"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"../api/utilities#json"},(0,r.kt)("inlineCode",{parentName:"a"},"sheet_to_json"))," helper function can generate\narrays of arrays of values based on the worksheet data.  Excel custom functions\ntransparently treat these as Dynamic Arrays."),(0,r.kt)("h2",{id:"fetching-files-from-the-internet"},"Fetching Files from the Internet"),(0,r.kt)("p",null,"For the next step, we will try to fetch data from an external resource.\n",(0,r.kt)("a",{parentName:"p",href:"https://sheetjs.com/pres.numbers"},"https://sheetjs.com/pres.numbers")," is an Apple Numbers file.  Excel does not\nunderstand Numbers files and it will not open them."),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Excel bug related to `fetch`")," (click to show)"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fetch")," is available to custom functions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function extern() {\n  try {\n    const url = "https://sheetjs.com/pres.numbers"; // URL to download\n    const res = await fetch(url); // fetch data\n    const ab = await res.arrayBuffer(); // get data as an array buffer\n\n    // DO SOMETHING WITH THE DATA HERE\n\n  } catch(e) { return e; } // pass error back to Excel\n}\n')),(0,r.kt)("p",null,"When fetching data, functions typically receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"ArrayBuffer")," which stores\nthe file data.  This is readily parsed with ",(0,r.kt)("inlineCode",{parentName:"p"},"read"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var wb = XLSX.read(ab); // parse workbook\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"This is how it should work"),"."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/OfficeDev/office-js/issues/2186"},"There are outstanding bugs in Excel.")),(0,r.kt)("p",null,"For the purposes of this demo, a Base64-encoded file will be used.  The\nworkaround involves fetching that Base64 file, getting the text, and parsing\nwith the ",(0,r.kt)("a",{parentName:"p",href:"../api/parse-options#input-type"},(0,r.kt)("inlineCode",{parentName:"a"},"base64")," type:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function extern() {\n  try {\n    const url = "https://sheetjs.com/pres.numbers.b64"; // URL to download\n    const res = await fetch(url); // fetch data\n    const text = await res.text(); // get data as an array buffer\n\n    var wb = XLSX.read(text, { type: "base64" });\n    // DO SOMETHING WITH THE DATA HERE\n\n  } catch(e) { return e; } // pass error back to Excel\n}\n')),(0,r.kt)("p",null,"Base64-encoded files can be generated with PowerShell:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},'[convert]::ToBase64String([System.IO.File]::ReadAllBytes((Resolve-Path "path\\to\\file"))) > file.b64\n'))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".Sheets")," property of the workbook object holds all of the worksheets and\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},".SheetNames")," property is an array of worksheet names.  Picking the first\nworksheet is fairly straightforward:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var ws = wb.Sheets[wb.SheetNames[0]]; // get first worksheet\n")),(0,r.kt)("p",null,"This data can be converted to an Array of Arrays in one line:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var aoa = XLSX.utils.sheet_to_json(ws, {header: 1}); // get data as array of arrays\n")),(0,r.kt)("p",null,'To demonstrate the parsing ability, a Base64-encoded version of the file will\nbe used.  This file contains no binary characters and should "just work".  Once\nthe aforementioned Excel bug is fixed, the raw binary files can be used.'),(0,r.kt)("p",null,"This new function should be added to ",(0,r.kt)("inlineCode",{parentName:"p"},"src\\functions\\functions.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"src\\functions\\functions.js","src\\functions\\functions.js":!0},'/**\n * Download file and write data\n * @customfunction\n * @returns {any[][]} Worksheet data\n */\nasync function extern() {\n  try {\n    /* URL */\n    // const url = "https://sheetjs.com/pres.numbers"; // Once Excel bug is fixed\n    const url = "https://sheetjs.com/pres.numbers.b64"; // workaround\n\n    /* Fetch Data */\n    const res = await fetch(url);\n\n    /* Get Data */\n    // const ab = await res.arrayBuffer(); // Once Excel bug is fixed\n    const b64 = await res.text(); // workaround\n\n    /* Parse Data */\n    // var wb = XLSX.read(ab); // Once Excel bug is fixed\n    var wb = XLSX.read(b64, { type: "base64" }); // workaround\n\n    /* get and return data */\n    var ws = wb.Sheets[wb.SheetNames[0]]; // get first worksheet\n    var aoa = XLSX.utils.sheet_to_json(ws, { header: 1 }); // get data as array of arrays\n    return [[url]];\n  } catch(e) { return [[e]]; } // pass error back to Excel\n}\n')),(0,r.kt)("p",null,"After making the change, save the files.  Close the terminal window and the\nExcel window (do not save the Excel file).  Re-run ",(0,r.kt)("inlineCode",{parentName:"p"},"npm start"),"."),(0,r.kt)("p",null,"Enter the formula ",(0,r.kt)("inlineCode",{parentName:"p"},"=SHEETJS.EXTERN()")," in cell ",(0,r.kt)("inlineCode",{parentName:"p"},"D1")," and press Enter.  Excel\nshould pull in the data and generate a dynamic array:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"/files/xlcfextern1.png",alt:"`SHEETJS.VERSION` output"})),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://sheetjs.com/pro"},"SheetJS Pro")," offers additional features that can be\nused in Excel Custom Functions and Add-ins"))}u.isMDXComponent=!0}}]);